import { Github, FileVideo, Upload, Wand2 } from "lucide-react";
import { Button } from "./components/ui/button";
import { Separator } from "./components/ui/separator";
import { Textarea } from "./components/ui/textarea";
import { Label } from "./components/ui/label";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "./components/ui/select";
import { Slider } from "./components/ui/slider";
import { VideoInputForm } from "./components/video-input-form";
import { PromptSelect } from "./components/prompt-select";
import { useState } from "react";
import { useCompletion } from 'ai/react'

export function App() {

  const [temperature, setTemperature] = useState(0.5);
  const [videoId, setVideoId] = useState<string | null>(null);

  const { input, setInput, handleInputChange, handleSubmit, completion, isLoading } = useCompletion({
    api: 'http://localhost:3333/ai/complete',
    body: {
      videoId,
      temperature,
    },
    headers: {
      'Content-type': 'application/json'
    }
  })
  return (
    <div className="min-h-screen flex flex-col">
      <div className="px-6 py-3 flex items-center justify-between border-b">
        <h1 className="text-xl font-bold">upload.ai</h1>
        <div className="flex items-center gap-3">
          <span className="text-sm text-muted-foreground">Developed with ðŸ’œ in Rocketseat's NLW.</span>
          <Separator orientation="vertical" className="h-6" />
          <Button variant={"outline"}>
            <a href="https://github.com/sasle/NLWIA" target="_blank">
              <Github className="w-4 h-4" />
            </a>
          </Button>
        </div>
      </div>
      <main className="flex-1 p-6 flex gap-6">
        <div className="flex flex-col flex-1 gap-4">
          <div className="grid grid-rows-2 gap-4 flex-1">
            <Textarea placeholder="Type in the prompt for the AI..." className="resize-none p-4 leading-relaxed" value={input} onChange={handleInputChange} />
            <Textarea placeholder="Result generated by AI..." className="resize-none p-4 leading-relaxed" readOnly value={completion} />
          </div>
          <p className="text-sm text-muted-foreground">Remember: you can use the <code className="text-violet-400">{'{transcription}'}</code> variable in the prompt to add the selected video's transcription content.</p>
        </div>
        <aside className="w-80 space-y-2">
          <VideoInputForm onVideoUploaded={setVideoId} />
          <Separator />
          <form className="space-y-6" onSubmit={handleSubmit}>
            <div className="space-y-2">
              <Label>Prompt</Label>
              <PromptSelect onPromptSelected={setInput} />
            </div>
            <div className="space-y-2">
              <Label>Model</Label>
              <Select disabled defaultValue="gpt3.5">
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="gpt3.5">GPT 3.5-turbo 16k</SelectItem>
                </SelectContent>
              </Select>
              <span className="block text-xs text-muted-foreground italic">You will be able to customize this option soon.</span>
            </div>
            <Separator />
            <div className="space-y-4">
              <Label>Temperature</Label>
              <Slider min={0} max={1} step={0.1} value={[temperature]} onValueChange={value => setTemperature(value[0])} />
              <span className="block text-xs text-muted-foreground italic leading-relaxed">Higher values tend to make the result more creative but with higher chance of error.</span>
            </div>
            <Separator />
            <Button disabled={isLoading} type="submit" className="w-full">Execute <Wand2 className="w-4 h-4 ml-2" /></Button>
          </form>
        </aside>
      </main>
    </div>
  )
}